{"version":3,"file":"OverlayScrollbars-36e5fb0c.37f85896.js","sources":["../../node_modules/@storybook/components/dist/esm/OverlayScrollbars-36e5fb0c.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, e as __rest } from './index-be4edbbc.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport '@storybook/csf';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"names":["obj","_typeof","Symbol","iterator","constructor","prototype","OverlayScrollbars$1","exports","module","global","factory","document","undefined","window","commonjsGlobal","undefined$1","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","bind","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","isA","def","isArray","type","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","extend","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","callback","isArrayLike","stripAndCollapse","value","tokens","match","join","elem","selector","nodeList","parentNode","querySelectorAll","el","strategy","child","insertAdjacentElement","insertAdjacentHTML","nodeType","val","parseCSSVal","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","inArray","setCSSVal","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","push","css","startNextAnimationInQ","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","stop","max","parseFloat","setAnimationValue","start","pos","speacialEasing","startTime","frame","clearQ","jumpToEnd","elementIsVisible","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","e","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","deepest","nodes","wrapper","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","matches","is","childs","_each","animate","jump","_stop","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","changed","hostSize","checkCache","_hostSizeChanged","refreshScrollbarsAutoHide","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","setupHostMouseTouchEvents","destroy","hostOnMouseMove","hostOnMouseEnter","hostOnMouseLeave","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","bodyMinSizeChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","disconnectMutationObservers","connectMutationObservers","oldSize","setupResizeObserver","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","textareaOnFocus","textareaOnFocusout","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","stopClickEventPropagation","documentKeyDown","increaseTrackScrollAmount","documentKeyUp","decreaseTrackScrollAmount","onMouseTouchDownContinue","isTouchEvent","documentDragMove","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","setupScrollbarCornerDOM","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","takeRecords","option","changedOps","setObjectPropVal","getObjectPropVal","extName","removeExt","pop","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","currValue","allowedValues","isX","coordinateProps","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","checkSettingsStringValue","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","getFinalScroll","getRawScroll","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","changePropertyName","destroyed","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","initBodyScroll","_bodyMouseTouchDownListener","setupStructureEvents","setupScrollbarCornerEvents","createMutationObservers","hostOnResized","activeElement","focus","valid","construct","pluginTargetElements","optsIsPlainObj","initOverlayScrollbarsStatics","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","__rest","osTargetRef","useRef","useEffect","mergeHostClassNames","assign","ref","_jsx","_osInstance$getElemen","osClassNames"],"mappings":"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"}